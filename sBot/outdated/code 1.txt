using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Drawing;
using System.Net;
using System.IO;
using HtmlAgilityPack;
using System.Windows.Forms;

namespace sBot
{
    class Supreme
    {
        SupremeList list;

        public Supreme()
        {

        }

        public void Start()
        {

        }

        public void Stop()
        {

        } 
    }

    class SupremeList
    {
        List<SupremeItem> item = new List<SupremeItem>();

        public SupremeList()
        {

        }

        public void Generate()
        {
            {
                HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                doc.LoadHtml(new WebClient().DownloadString("http://www.supremenewyork.com/shop/all"));

                var elements = doc.DocumentNode.Descendants("article");

                int i = 0;
                foreach (HtmlNode node in elements)
                {
                    try
                    {
                        item.Insert(i, new SupremeItem(node.SelectSingleNode("a/img").Attributes[0].Value, node.SelectSingleNode("a/img").Attributes[2].Value, node.SelectSingleNode("a").Attributes[0].Value, new Size(Convert.ToInt32(node.SelectSingleNode("a/img").Attributes[1].Value), Convert.ToInt32(node.SelectSingleNode("a/img").Attributes[3].Value)), node.Descendants("div").Any(div => div.Attributes["class"] != null && div.Attributes["class"].Value == "sold_out_tag")));
                    }
                    catch (Exception)
                    {
                        item.Insert(i, new SupremeItem());
                    }
                    
                    i++;
                }
            }
        }
    }

    class SupremeItem
    {
        private string name;
        private string product;
        private string href;
        private Size size;
        private Image img;
        private bool sold;

        public SupremeItem()
        {
            name = string.Empty;
            product = string.Empty;
            href = string.Empty;
            size = Size.Empty;
            img = null;
            sold = false;
        }

        public SupremeItem(string _name, string _product, string _href, Size _size, bool _sold)
        {
            name = _name;
            product = _product;
            href = _href;
            size = _size;
            img = null;
            sold = _sold;

            #region Image processor

            /*

            try
            {
                byte[] data = new WebClient().DownloadData(product);

                MemoryStream stream = new MemoryStream(data);

                img = Image.FromStream(stream);

                stream.Close();
            }
            catch (Exception)
            {
                img = null;
            }
            
             */

            #endregion
        }

        public bool isEmpty() { return ( string.IsNullOrEmpty(name) && string.IsNullOrEmpty(product) && string.IsNullOrEmpty(href) ? true : false ); }

        public string getName() { return name; }

        public string getProduct() { return product; }

        public string getHref() { return href; }

        public Size getSize() { return size; }

        public Image getImg() { return img; }
    }
}